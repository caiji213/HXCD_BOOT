<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Thu Jun 26 17:28:48 2025
<BR><P>
<H3>Maximum Stack Usage =        656 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; i2c_24c64_test &rArr; eeprom_buffer_read &rArr; i2c_dma_rx_config &rArr; dma_init &rArr; dma_channel_disable
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6d]">CAN0_Busoff_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6d]">CAN0_Busoff_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC0_1_IRQHandler</a> from gd32g5x3_it.o(.text.ADC0_1_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[34]">ADC2_IRQHandler</a> from gd32g5x3_it.o(.text.ADC2_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[42]">ADC3_IRQHandler</a> from gd32g5x3_it.o(.text.ADC3_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from gd32g5x3_it.o(.text.BusFault_Handler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[6d]">CAN0_Busoff_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[6e]">CAN0_Error_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[6f]">CAN0_FastError_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[6c]">CAN0_Message_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[71]">CAN0_REC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[70]">CAN0_TEC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[6b]">CAN0_WKUP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[74]">CAN1_Busoff_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[75]">CAN1_Error_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[76]">CAN1_FastError_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[73]">CAN1_Message_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[78]">CAN1_REC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[77]">CAN1_TEC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[72]">CAN1_WKUP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[7b]">CAN2_Busoff_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[7c]">CAN2_Error_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[7d]">CAN2_FastError_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[7a]">CAN2_Message_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[7f]">CAN2_REC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[7e]">CAN2_TEC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[79]">CAN2_WKUP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[58]">CAU_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[61]">CLA_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[44]">CMP0_3_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[45]">CMP4_7_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[46]">CMP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[15]">DMA0_Channel0_IRQHandler</a> from gd32g5x3_it.o(.text.DMA0_Channel0_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[16]">DMA0_Channel1_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[17]">DMA0_Channel2_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[18]">DMA0_Channel3_IRQHandler</a> from gd32g5x3_it.o(.text.DMA0_Channel3_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[19]">DMA0_Channel4_IRQHandler</a> from gd32g5x3_it.o(.text.DMA0_Channel4_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[1a]">DMA0_Channel5_IRQHandler</a> from gd32g5x3_it.o(.text.DMA0_Channel5_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[1b]">DMA0_Channel6_IRQHandler</a> from gd32g5x3_it.o(.text.DMA0_Channel6_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[3d]">DMA1_Channel0_IRQHandler</a> from gd32g5x3_it.o(.text.DMA1_Channel0_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[3e]">DMA1_Channel1_IRQHandler</a> from gd32g5x3_it.o(.text.DMA1_Channel1_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[3f]">DMA1_Channel2_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[40]">DMA1_Channel3_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[41]">DMA1_Channel4_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[5f]">DMA1_Channel5_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[60]">DMA1_Channel6_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[5c]">DMAMUX_OVR_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from gd32g5x3_it.o(.text.DebugMon_Handler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[2e]">EXTI10_15_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[1d]">EXTI5_9_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[63]">FAC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[5e]">FFT_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[e]">FMC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[55]">FPU_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[64]">HPDF_INT0_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[65]">HPDF_INT1_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[66]">HPDF_INT2_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[67]">HPDF_INT3_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[47]">HRTIMER_IRQ0_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[48]">HRTIMER_IRQ1_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[49]">HRTIMER_IRQ2_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[4a]">HRTIMER_IRQ3_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[4b]">HRTIMER_IRQ4_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[4c]">HRTIMER_IRQ5_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[4d]">HRTIMER_IRQ6_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[4e]">HRTIMER_IRQ7_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[4f]">HRTIMER_IRQ8_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[50]">HRTIMER_IRQ9_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gd32g5x3_it.o(.text.HardFault_Handler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[26]">I2C0_ER_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[25]">I2C0_EV_WKUP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[28]">I2C1_ER_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[27]">I2C1_EV_WKUP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[57]">I2C2_ER_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[56]">I2C2_EV_WKUP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[5b]">I2C3_ER_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[5a]">I2C3_EV_WKUP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[36]">LPTIMER_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[b]">LVD_VAVD_VOVD_VUVD_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from gd32g5x3_it.o(.text.MemManage_Handler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32g5x3_it.o(.text.NMI_Handler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from gd32g5x3_it.o(.text.PendSV_Handler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[5d]">QSPI_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[f]">RCU_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[2f]">RTC_Alarm_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[29]">SPI0_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[2a]">SPI1_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[38]">SPI2_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from gd32g5x3_it.o(.text.SVC_Handler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[35]">SYSCFG_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from gd32g5x3_it.o(.text.SysTick_Handler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[88]">SystemInit</a> from system_gd32g5x3.o(.text.SystemInit) referenced from startup_gd32g5x3.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[1e]">TIMER0_BRK_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[21]">TIMER0_Channel_IRQHandler</a> from gd32g5x3_it.o(.text.TIMER0_Channel_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[80]">TIMER0_DEC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[20]">TIMER0_TRG_CMT_IDX_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[1f]">TIMER0_UP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[68]">TIMER14_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[69]">TIMER15_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[6a]">TIMER16_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[51]">TIMER19_BRK_TRS_IDX_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[54]">TIMER19_Channel_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[86]">TIMER19_DEC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[53]">TIMER19_TRG_CMT_IDX_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[52]">TIMER19_UP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[81]">TIMER1_DEC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[22]">TIMER1_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[82]">TIMER2_DEC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[23]">TIMER2_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[83]">TIMER3_DEC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[24]">TIMER3_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[84]">TIMER4_DEC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[37]">TIMER4_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[3b]">TIMER5_DAC0_2_UDR_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[3c]">TIMER6_DAC1_3_UDR_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[30]">TIMER7_BRK_TRS_IDX_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[33]">TIMER7_Channel_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[85]">TIMER7_DEC_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[32]">TIMER7_TRG_CMT_IDX_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[31]">TIMER7_UP_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[62]">TMU_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[59]">TRNG_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[39]">UART3_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[3a]">UART4_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[2b]">USART0_IRQHandler</a> from gd32g5x3_it.o(.text.USART0_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[2c]">USART1_IRQHandler</a> from gd32g5x3_it.o(.text.USART1_IRQHandler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[2d]">USART2_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from gd32g5x3_it.o(.text.UsageFault_Handler) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[43]">VUVD1_VOVD1_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[a]">WWDGT_IRQHandler</a> from startup_gd32g5x3.o(.text) referenced from startup_gd32g5x3.o(RESET)
 <LI><a href="#[89]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32g5x3.o(.text)
 <LI><a href="#[8a]">fputc</a> from main.o(.text.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[87]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[89]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(.text)
</UL>
<P><STRONG><a name="[13c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[8b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[99]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[13d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[13e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[13f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[140]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[141]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>CAN0_Busoff_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_Busoff_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_Busoff_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>CAN0_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>CAN0_FastError_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>CAN0_Message_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>CAN0_REC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>CAN0_TEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>CAN0_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>CAN1_Busoff_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>CAN1_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>CAN1_FastError_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>CAN1_Message_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>CAN1_REC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>CAN1_TEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>CAN1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>CAN2_Busoff_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>CAN2_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>CAN2_FastError_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>CAN2_Message_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>CAN2_REC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>CAN2_TEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>CAN2_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>CAU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>CLA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>CMP0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>CMP4_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMAMUX_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>FAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>FFT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>HPDF_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>HPDF_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>HPDF_INT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>HPDF_INT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>HRTIMER_IRQ0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>HRTIMER_IRQ1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>HRTIMER_IRQ2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>HRTIMER_IRQ3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>HRTIMER_IRQ4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>HRTIMER_IRQ5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>HRTIMER_IRQ6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>HRTIMER_IRQ7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>HRTIMER_IRQ8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>HRTIMER_IRQ9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C0_EV_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C1_EV_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>I2C2_EV_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>I2C3_EV_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>LPTIMER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>LVD_VAVD_VOVD_VUVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>QSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SYSCFG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER0_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>TIMER0_DEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIMER0_TRG_CMT_IDX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER0_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>TIMER14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>TIMER15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>TIMER16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIMER19_BRK_TRS_IDX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TIMER19_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>TIMER19_DEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIMER19_TRG_CMT_IDX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIMER19_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>TIMER1_DEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>TIMER2_DEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>TIMER3_DEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>TIMER4_DEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIMER5_DAC0_2_UDR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIMER6_DAC1_3_UDR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIMER7_BRK_TRS_IDX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>TIMER7_DEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIMER7_TRG_CMT_IDX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIMER7_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>VUVD1_VOVD1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32g5x3.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[123]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_page_write
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[145]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[138]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[8c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[146]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[147]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[148]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[149]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[92]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1c]"></a>ADC0_1_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gd32g5x3_it.o(.text.ADC0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ADC0_1_IRQHandler &rArr; adc_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_inserted_data_read
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_interrupt_flag_clear
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>ADC2_IRQHandler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gd32g5x3_it.o(.text.ADC2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ADC2_IRQHandler &rArr; adc_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_inserted_data_read
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_interrupt_flag_clear
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>ADC3_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gd32g5x3_it.o(.text.ADC3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ADC3_IRQHandler &rArr; adc_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_inserted_data_read
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_interrupt_flag_clear
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32g5x3_it.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gd32g5x3_it.o(.text.DMA0_Channel0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DMA0_Channel0_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_disable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gd32g5x3_it.o(.text.DMA0_Channel3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DMA0_Channel3_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_disable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gd32g5x3_it.o(.text.DMA0_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DMA0_Channel4_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_callback
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gd32g5x3_it.o(.text.DMA0_Channel5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DMA0_Channel5_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_callback
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gd32g5x3_it.o(.text.DMA0_Channel6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DMA0_Channel6_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gd32g5x3_it.o(.text.DMA1_Channel0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DMA1_Channel0_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gd32g5x3_it.o(.text.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DMA1_Channel1_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32g5x3_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32g5x3_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32g5x3_it.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, gd32g5x3_it.o(.text.NMI_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NMI_Handler &rArr; syscfg_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32g5x3_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32g5x3_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gd32g5x3_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>SystemInit</STRONG> (Thumb, 336 bytes, Stack size 24 bytes, system_gd32g5x3.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SystemInit &rArr; system_clock_config &rArr; system_clock_216m_hxtal
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_soft_delay_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gd32g5x3_it.o(.text.TIMER0_Channel_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER0_Channel_IRQHandler &rArr; timer_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USART0_IRQHandler</STRONG> (Thumb, 348 bytes, Stack size 24 bytes, gd32g5x3_it.o(.text.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USART0_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_clear
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_disable
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_clear
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_clear
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>USART1_IRQHandler</STRONG> (Thumb, 354 bytes, Stack size 24 bytes, gd32g5x3_it.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USART1_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_receive_mode
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_clear
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_disable
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_clear
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_clear
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32g5x3_it.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32g5x3.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>adc_calibration_enable</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, gd32g5x3_adc.o(.text.adc_calibration_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_calibration_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[d3]"></a>adc_calibration_mode_config</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gd32g5x3_adc.o(.text.adc_calibration_mode_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_calibration_mode_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[d4]"></a>adc_calibration_number</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32g5x3_adc.o(.text.adc_calibration_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_calibration_number
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[cd]"></a>adc_channel_length_config</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, gd32g5x3_adc.o(.text.adc_channel_length_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_channel_length_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[c9]"></a>adc_clock_config</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, gd32g5x3_adc.o(.text.adc_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[cc]"></a>adc_data_alignment_config</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gd32g5x3_adc.o(.text.adc_data_alignment_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_data_alignment_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[b7]"></a>adc_deinit</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gd32g5x3_adc.o(.text.adc_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = adc_deinit &rArr; rcu_periph_reset_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[dc]"></a>adc_dma_mode_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_adc.o(.text.adc_dma_mode_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_dma_mode_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
</UL>

<P><STRONG><a name="[db]"></a>adc_dma_request_after_last_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_adc.o(.text.adc_dma_request_after_last_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_dma_request_after_last_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
</UL>

<P><STRONG><a name="[d1]"></a>adc_enable</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, gd32g5x3_adc.o(.text.adc_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[cf]"></a>adc_external_trigger_config</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gd32g5x3_adc.o(.text.adc_external_trigger_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_external_trigger_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[ba]"></a>adc_gpio_init</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, bsp_adc.o(.text.adc_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = adc_gpio_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
</UL>

<P><STRONG><a name="[ce]"></a>adc_inserted_channel_config</STRONG> (Thumb, 308 bytes, Stack size 20 bytes, gd32g5x3_adc.o(.text.adc_inserted_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = adc_inserted_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[9c]"></a>adc_inserted_data_read</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gd32g5x3_adc.o(.text.adc_inserted_data_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_inserted_data_read
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>

<P><STRONG><a name="[d0]"></a>adc_interrupt_enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32g5x3_adc.o(.text.adc_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[9b]"></a>adc_interrupt_flag_clear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gd32g5x3_adc.o(.text.adc_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[9a]"></a>adc_interrupt_flag_get</STRONG> (Thumb, 304 bytes, Stack size 20 bytes, gd32g5x3_adc.o(.text.adc_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = adc_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>adc_resolution_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32g5x3_adc.o(.text.adc_resolution_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_resolution_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[d6]"></a>adc_routine_channel_config</STRONG> (Thumb, 788 bytes, Stack size 16 bytes, gd32g5x3_adc.o(.text.adc_routine_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_routine_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
</UL>

<P><STRONG><a name="[dd]"></a>adc_software_trigger_enable</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gd32g5x3_adc.o(.text.adc_software_trigger_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_software_trigger_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
</UL>

<P><STRONG><a name="[ca]"></a>adc_special_function_config</STRONG> (Thumb, 168 bytes, Stack size 12 bytes, gd32g5x3_adc.o(.text.adc_special_function_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = adc_special_function_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[bd]"></a>adc_trigger_config</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bsp_adc.o(.text.adc_trigger_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = adc_trigger_config &rArr; trigsel_init &rArr; trigsel_register_lock_get
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trigsel_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
</UL>

<P><STRONG><a name="[bf]"></a>bsp_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp.o(.text.bsp_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = bsp_Init &rArr; bsp_rs232_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get &rArr; rcu_pll_clock_freq_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>bsp_adc_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_adc.o(.text.bsp_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = bsp_adc_init &rArr; bsp_adc_voltage_dma_config &rArr; adc_deinit &rArr; rcu_periph_reset_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_trigger_config
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[c7]"></a>bsp_adc_injected_config</STRONG> (Thumb, 478 bytes, Stack size 64 bytes, bsp_adc.o(.text.bsp_adc_injected_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = bsp_adc_injected_config &rArr; adc_deinit &rArr; rcu_periph_reset_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_interrupt_enable
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_config
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_inserted_channel_config
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_channel_length_config
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_resolution_config
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_enable
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_number
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_mode_config
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_data_alignment_config
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_special_function_config
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_clock_config
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_deinit
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_interrupt_flag_clear
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
</UL>

<P><STRONG><a name="[c8]"></a>bsp_adc_voltage_dma_config</STRONG> (Thumb, 334 bytes, Stack size 80 bytes, bsp_adc.o(.text.bsp_adc_voltage_dma_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = bsp_adc_voltage_dma_config &rArr; adc_deinit &rArr; rcu_periph_reset_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_enable
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_software_trigger_enable
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_config
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_routine_channel_config
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_channel_length_config
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_request_after_last_enable
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_mode_enable
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_resolution_config
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_enable
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_number
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_mode_config
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_data_alignment_config
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_special_function_config
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_clock_config
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_deinit
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_init
</UL>

<P><STRONG><a name="[c3]"></a>bsp_i2c_init</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, bsp_i2c.o(.text.bsp_i2c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = bsp_i2c_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_enable
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_clock_config
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_timing_config
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_eeprom_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[e4]"></a>bsp_pwm_en_init</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bsp_tim_pwm.o(.text.bsp_pwm_en_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = bsp_pwm_en_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm_init
</UL>

<P><STRONG><a name="[c0]"></a>bsp_pwm_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_tim_pwm.o(.text.bsp_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = bsp_pwm_init &rArr; bsp_tim_pwm_init &rArr; pwm_gpio_config &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm_en_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[e7]"></a>bsp_rs232_dma_init</STRONG> (Thumb, 278 bytes, Stack size 72 bytes, bsp_rs232.o(.text.bsp_rs232_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = bsp_rs232_dma_init &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmamux_synchronization_disable
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_struct_para_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_disable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_transmit_config
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_receive_config
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
</UL>

<P><STRONG><a name="[ed]"></a>bsp_rs232_dma_send</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bsp_rs232.o(.text.bsp_rs232_dma_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bsp_rs232_dma_send &rArr; dma_interrupt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_address_config
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c4]"></a>bsp_rs232_init</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, bsp_rs232.o(.text.bsp_rs232_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = bsp_rs232_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get &rArr; rcu_pll_clock_freq_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[f4]"></a>bsp_rs485_dma_init</STRONG> (Thumb, 300 bytes, Stack size 80 bytes, bsp_rs485.o(.text.bsp_rs485_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = bsp_rs485_dma_init &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmamux_synchronization_disable
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_struct_para_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_disable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_transmit_config
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_receive_config
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
</UL>

<P><STRONG><a name="[f5]"></a>bsp_rs485_dma_send</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, bsp_rs485.o(.text.bsp_rs485_dma_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_rs485_dma_send &rArr; bsp_rs485_send_mode &rArr; gpio_bit_set
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_address_config
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_send_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c5]"></a>bsp_rs485_init</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, bsp_rs485.o(.text.bsp_rs485_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = bsp_rs485_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get &rArr; rcu_pll_clock_freq_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_receive_mode
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[b6]"></a>bsp_rs485_receive_mode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp_rs485.o(.text.bsp_rs485_receive_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_rs485_receive_mode &rArr; gpio_bit_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
</UL>

<P><STRONG><a name="[f6]"></a>bsp_rs485_send_mode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bsp_rs485.o(.text.bsp_rs485_send_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_rs485_send_mode &rArr; gpio_bit_set
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_send
</UL>

<P><STRONG><a name="[f8]"></a>bsp_spi_dma_init</STRONG> (Thumb, 278 bytes, Stack size 72 bytes, bsp_spi.o(.text.bsp_spi_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = bsp_spi_dma_init &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmamux_synchronization_disable
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_to_memory_disable
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_struct_para_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_dma_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_init
</UL>

<P><STRONG><a name="[fb]"></a>bsp_spi_gpio_config</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, bsp_spi.o(.text.bsp_spi_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = bsp_spi_gpio_config &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_init
</UL>

<P><STRONG><a name="[c2]"></a>bsp_spi_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_spi.o(.text.bsp_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = bsp_spi_init &rArr; bsp_spi_dma_init &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_dma_init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_periph_config
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_gpio_config
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_rcu_config
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[fd]"></a>bsp_spi_periph_config</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, bsp_spi.o(.text.bsp_spi_periph_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = bsp_spi_periph_config &rArr; spi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_fifo_access_size_config
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_init
</UL>

<P><STRONG><a name="[fc]"></a>bsp_spi_rcu_config</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bsp_spi.o(.text.bsp_spi_rcu_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bsp_spi_rcu_config &rArr; rcu_periph_clock_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_init
</UL>

<P><STRONG><a name="[102]"></a>bsp_spi_transfer</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, bsp_spi.o(.text.bsp_spi_transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bsp_spi_transfer &rArr; dma_transfer_number_config
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e6]"></a>bsp_tim_pwm_init</STRONG> (Thumb, 418 bytes, Stack size 160 bytes, bsp_tim_pwm.o(.text.bsp_tim_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = bsp_tim_pwm_init &rArr; pwm_gpio_config &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_multi_mode_channel_mode_config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_shadow_config
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_config
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_struct_para_init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_primary_output_config
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_break_config
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_break_struct_para_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_mode_config
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_struct_para_init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm_init
</UL>

<P><STRONG><a name="[d2]"></a>delay_1ms</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, systick.o(.text.delay_1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_24c64_test
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
</UL>

<P><STRONG><a name="[a7]"></a>delay_decrement</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, systick.o(.text.delay_decrement))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[9f]"></a>dma_channel_disable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gd32g5x3_dma.o(.text.dma_channel_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel0_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel3_IRQHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel0_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_send
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_send
</UL>

<P><STRONG><a name="[b2]"></a>dma_channel_enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gd32g5x3_dma.o(.text.dma_channel_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_transfer
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_send
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_config
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>

<P><STRONG><a name="[e9]"></a>dma_circulation_disable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gd32g5x3_dma.o(.text.dma_circulation_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_circulation_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_config
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_dma_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>

<P><STRONG><a name="[d9]"></a>dma_circulation_enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gd32g5x3_dma.o(.text.dma_circulation_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_circulation_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
</UL>

<P><STRONG><a name="[d7]"></a>dma_deinit</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, gd32g5x3_dma.o(.text.dma_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_config
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_dma_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>

<P><STRONG><a name="[b1]"></a>dma_flag_clear</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, gd32g5x3_dma.o(.text.dma_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[d8]"></a>dma_init</STRONG> (Thumb, 432 bytes, Stack size 24 bytes, gd32g5x3_dma.o(.text.dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_config
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_dma_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>

<P><STRONG><a name="[a0]"></a>dma_interrupt_disable</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, gd32g5x3_dma.o(.text.dma_interrupt_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel3_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel0_IRQHandler
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>

<P><STRONG><a name="[da]"></a>dma_interrupt_enable</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, gd32g5x3_dma.o(.text.dma_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_send
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_send
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_config
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_dma_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>

<P><STRONG><a name="[9e]"></a>dma_interrupt_flag_clear</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, gd32g5x3_dma.o(.text.dma_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel6_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel0_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel5_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel4_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel3_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel0_IRQHandler
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_send
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_send
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>

<P><STRONG><a name="[9d]"></a>dma_interrupt_flag_get</STRONG> (Thumb, 206 bytes, Stack size 28 bytes, gd32g5x3_dma.o(.text.dma_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = dma_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel6_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel0_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel5_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel4_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel3_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel0_IRQHandler
</UL>

<P><STRONG><a name="[ee]"></a>dma_memory_address_config</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gd32g5x3_dma.o(.text.dma_memory_address_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_memory_address_config
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_send
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_send
</UL>

<P><STRONG><a name="[f9]"></a>dma_memory_to_memory_disable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gd32g5x3_dma.o(.text.dma_memory_to_memory_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_memory_to_memory_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_dma_init
</UL>

<P><STRONG><a name="[e8]"></a>dma_struct_para_init</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, gd32g5x3_dma.o(.text.dma_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dma_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_config
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_dma_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>

<P><STRONG><a name="[b0]"></a>dma_transfer_number_config</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, gd32g5x3_dma.o(.text.dma_transfer_number_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_transfer_number_config
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_transfer
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_send
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_send
</UL>

<P><STRONG><a name="[af]"></a>dma_transfer_number_get</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gd32g5x3_dma.o(.text.dma_transfer_number_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_transfer_number_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[eb]"></a>dmamux_synchronization_disable</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, gd32g5x3_dma.o(.text.dmamux_synchronization_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dmamux_synchronization_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_config
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_dma_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>

<P><STRONG><a name="[113]"></a>eeprom_buffer_read</STRONG> (Thumb, 1288 bytes, Stack size 120 bytes, at24cxx.o(.text.eeprom_buffer_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = eeprom_buffer_read &rArr; i2c_dma_rx_config &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transfer_byte_number_config
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_reload_disable
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_reload_enable
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_data_transmit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start_on_bus
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_automatic_end_disable
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_automatic_end_enable
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_addressing
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_config
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_bus_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_24c64_test
</UL>

<P><STRONG><a name="[120]"></a>eeprom_buffer_write</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, at24cxx.o(.text.eeprom_buffer_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = eeprom_buffer_write &rArr; eeprom_page_write &rArr; i2c_dma_tx_config &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_wait_ready
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_page_write
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_24c64_test
</UL>

<P><STRONG><a name="[121]"></a>eeprom_page_write</STRONG> (Thumb, 566 bytes, Stack size 80 bytes, at24cxx.o(.text.eeprom_page_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = eeprom_page_write &rArr; i2c_dma_tx_config &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_clear
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_flag_get
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_transfer_byte_number_config
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start_on_bus
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_automatic_end_enable
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_addressing
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_config
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_bus_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_write
</UL>

<P><STRONG><a name="[122]"></a>eeprom_wait_ready</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, at24cxx.o(.text.eeprom_wait_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = eeprom_wait_ready &rArr; i2c_bus_reset &rArr; i2c_gpio_reset &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop_on_bus
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_bus_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_write
</UL>

<P><STRONG><a name="[8a]"></a>fputc</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, main.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = fputc &rArr; usart_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[130]"></a>gd32g5x3_firmware_version_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_gd32g5x3.o(.text.gd32g5x3_firmware_version_get))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_system_info
</UL>

<P><STRONG><a name="[de]"></a>gpio_af_set</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, gd32g5x3_gpio.o(.text.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_gpio_config
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_gpio_config
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_init
</UL>

<P><STRONG><a name="[e5]"></a>gpio_bit_reset</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gd32g5x3_gpio.o(.text.gpio_bit_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_receive_mode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm_en_init
</UL>

<P><STRONG><a name="[f7]"></a>gpio_bit_set</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gd32g5x3_gpio.o(.text.gpio_bit_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_send_mode
</UL>

<P><STRONG><a name="[bc]"></a>gpio_mode_set</STRONG> (Thumb, 156 bytes, Stack size 28 bytes, gd32g5x3_gpio.o(.text.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_gpio_init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_bus_reset
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_gpio_reset
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm_en_init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_gpio_config
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_gpio_config
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_init
</UL>

<P><STRONG><a name="[df]"></a>gpio_output_options_set</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, gd32g5x3_gpio.o(.text.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_bus_reset
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_gpio_reset
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm_en_init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_gpio_config
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_gpio_config
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_init
</UL>

<P><STRONG><a name="[127]"></a>i2c_24c64_test</STRONG> (Thumb, 1218 bytes, Stack size 352 bytes, at24cxx.o(.text.i2c_24c64_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = i2c_24c64_test &rArr; eeprom_buffer_read &rArr; i2c_dma_rx_config &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_write
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[116]"></a>i2c_automatic_end_disable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_i2c.o(.text.i2c_automatic_end_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_automatic_end_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[11d]"></a>i2c_automatic_end_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_i2c.o(.text.i2c_automatic_end_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_automatic_end_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_page_write
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[119]"></a>i2c_bus_reset</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, bsp_i2c.o(.text.i2c_bus_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = i2c_bus_reset &rArr; i2c_gpio_reset &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_gpio_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_wait_ready
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_page_write
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[11a]"></a>i2c_data_transmit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gd32g5x3_i2c.o(.text.i2c_data_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[12a]"></a>i2c_dma_enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gd32g5x3_i2c.o(.text.i2c_dma_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_dma_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_rx_config
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_tx_config
</UL>

<P><STRONG><a name="[a3]"></a>i2c_dma_rx_callback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at24cxx.o(.text.i2c_dma_rx_callback))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel5_IRQHandler
</UL>

<P><STRONG><a name="[11e]"></a>i2c_dma_rx_config</STRONG> (Thumb, 156 bytes, Stack size 64 bytes, bsp_i2c.o(.text.i2c_dma_rx_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = i2c_dma_rx_config &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmamux_synchronization_disable
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_struct_para_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[a2]"></a>i2c_dma_tx_callback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at24cxx.o(.text.i2c_dma_tx_callback))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[124]"></a>i2c_dma_tx_config</STRONG> (Thumb, 150 bytes, Stack size 64 bytes, bsp_i2c.o(.text.i2c_dma_tx_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = i2c_dma_tx_config &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmamux_synchronization_disable
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_struct_para_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_dma_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_page_write
</UL>

<P><STRONG><a name="[e3]"></a>i2c_eeprom_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at24cxx.o(.text.i2c_eeprom_init))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_init
</UL>

<P><STRONG><a name="[e2]"></a>i2c_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_i2c.o(.text.i2c_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_init
</UL>

<P><STRONG><a name="[11f]"></a>i2c_flag_clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32g5x3_i2c.o(.text.i2c_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_page_write
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[117]"></a>i2c_flag_get</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gd32g5x3_i2c.o(.text.i2c_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_page_write
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[129]"></a>i2c_gpio_reset</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, bsp_i2c.o(.text.i2c_gpio_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = i2c_gpio_reset &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_bus_reset
</UL>

<P><STRONG><a name="[114]"></a>i2c_master_addressing</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, gd32g5x3_i2c.o(.text.i2c_master_addressing))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_master_addressing
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_page_write
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[e1]"></a>i2c_master_clock_config</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, gd32g5x3_i2c.o(.text.i2c_master_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2c_master_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_init
</UL>

<P><STRONG><a name="[11c]"></a>i2c_reload_disable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_i2c.o(.text.i2c_reload_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_reload_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[11b]"></a>i2c_reload_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_i2c.o(.text.i2c_reload_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_reload_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[118]"></a>i2c_start_on_bus</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_i2c.o(.text.i2c_start_on_bus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_start_on_bus
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_page_write
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[125]"></a>i2c_stop_on_bus</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_i2c.o(.text.i2c_stop_on_bus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = i2c_stop_on_bus
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_wait_ready
</UL>

<P><STRONG><a name="[e0]"></a>i2c_timing_config</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gd32g5x3_i2c.o(.text.i2c_timing_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_timing_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_init
</UL>

<P><STRONG><a name="[115]"></a>i2c_transfer_byte_number_config</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32g5x3_i2c.o(.text.i2c_transfer_byte_number_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_transfer_byte_number_config
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_page_write
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eeprom_buffer_read
</UL>

<P><STRONG><a name="[87]"></a>main</STRONG> (Thumb, 294 bytes, Stack size 88 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = main &rArr; i2c_24c64_test &rArr; eeprom_buffer_read &rArr; i2c_dma_rx_config &rArr; dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_spi_data
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_transfer
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_send
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_send
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_24c64_test
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_system_info
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[c6]"></a>nvic_config</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, bsp.o(.text.nvic_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nvic_config &rArr; nvic_irq_enable &rArr; nvic_priority_group_set
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_Init
</UL>

<P><STRONG><a name="[12f]"></a>nvic_irq_enable</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, gd32g5x3_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nvic_irq_enable &rArr; nvic_priority_group_set
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
</UL>

<P><STRONG><a name="[12e]"></a>nvic_priority_group_set</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, gd32g5x3_misc.o(.text.nvic_priority_group_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
</UL>

<P><STRONG><a name="[aa]"></a>nvic_vector_table_set</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gd32g5x3_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nvic_vector_table_set
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[12c]"></a>print_system_info</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, main.o(.text.print_system_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = print_system_info &rArr; rcu_clock_freq_get &rArr; rcu_pll_clock_freq_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd32g5x3_firmware_version_get
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12d]"></a>process_spi_data</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_spi.o(.text.process_spi_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = process_spi_data
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[131]"></a>rcu_clock_freq_get</STRONG> (Thumb, 1156 bytes, Stack size 144 bytes, gd32g5x3_rcu.o(.text.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = rcu_clock_freq_get &rArr; rcu_pll_clock_freq_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_pll_clock_freq_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_system_info
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[bb]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32g5x3_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_voltage_dma_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_adc_injected_config
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_trigger_config
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_gpio_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_pwm_en_init
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_gpio_config
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_rcu_config
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_i2c_init
</UL>

<P><STRONG><a name="[b9]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32g5x3_rcu.o(.text.rcu_periph_reset_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_deinit
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[b8]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32g5x3_rcu.o(.text.rcu_periph_reset_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_deinit
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[fa]"></a>spi_dma_enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gd32g5x3_spi.o(.text.spi_dma_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_dma_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_dma_init
</UL>

<P><STRONG><a name="[101]"></a>spi_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_spi.o(.text.spi_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = spi_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_periph_config
</UL>

<P><STRONG><a name="[100]"></a>spi_fifo_access_size_config</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gd32g5x3_spi.o(.text.spi_fifo_access_size_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_fifo_access_size_config
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_periph_config
</UL>

<P><STRONG><a name="[ff]"></a>spi_init</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, gd32g5x3_spi.o(.text.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_periph_config
</UL>

<P><STRONG><a name="[fe]"></a>spi_struct_para_init</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, gd32g5x3_spi.o(.text.spi_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = spi_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_spi_periph_config
</UL>

<P><STRONG><a name="[a4]"></a>syscfg_interrupt_flag_get</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, gd32g5x3_syscfg.o(.text.syscfg_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = syscfg_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>

<P><STRONG><a name="[12b]"></a>systick_config</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, systick.o(.text.systick_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = systick_config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[110]"></a>timer_auto_reload_shadow_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_timer.o(.text.timer_auto_reload_shadow_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_auto_reload_shadow_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[10f]"></a>timer_break_config</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, gd32g5x3_timer.o(.text.timer_break_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_break_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[10e]"></a>timer_break_struct_para_init</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, gd32g5x3_timer.o(.text.timer_break_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_break_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[108]"></a>timer_channel_output_config</STRONG> (Thumb, 970 bytes, Stack size 16 bytes, gd32g5x3_timer.o(.text.timer_channel_output_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_channel_output_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[10b]"></a>timer_channel_output_mode_config</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, gd32g5x3_timer.o(.text.timer_channel_output_mode_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_channel_output_mode_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[10a]"></a>timer_channel_output_pulse_value_config</STRONG> (Thumb, 440 bytes, Stack size 20 bytes, gd32g5x3_timer.o(.text.timer_channel_output_pulse_value_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = timer_channel_output_pulse_value_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[10c]"></a>timer_channel_output_shadow_config</STRONG> (Thumb, 258 bytes, Stack size 12 bytes, gd32g5x3_timer.o(.text.timer_channel_output_shadow_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = timer_channel_output_shadow_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[107]"></a>timer_channel_output_struct_para_init</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, gd32g5x3_timer.o(.text.timer_channel_output_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_channel_output_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[104]"></a>timer_deinit</STRONG> (Thumb, 416 bytes, Stack size 64 bytes, gd32g5x3_timer.o(.text.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = timer_deinit &rArr; rcu_periph_reset_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[112]"></a>timer_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_timer.o(.text.timer_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[106]"></a>timer_init</STRONG> (Thumb, 404 bytes, Stack size 8 bytes, gd32g5x3_timer.o(.text.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[10d]"></a>timer_interrupt_enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32g5x3_timer.o(.text.timer_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[ac]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gd32g5x3_timer.o(.text.timer_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_Channel_IRQHandler
</UL>

<P><STRONG><a name="[ab]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gd32g5x3_timer.o(.text.timer_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_Channel_IRQHandler
</UL>

<P><STRONG><a name="[109]"></a>timer_multi_mode_channel_mode_config</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gd32g5x3_timer.o(.text.timer_multi_mode_channel_mode_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_multi_mode_channel_mode_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[111]"></a>timer_primary_output_config</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gd32g5x3_timer.o(.text.timer_primary_output_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_primary_output_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[105]"></a>timer_struct_para_init</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, gd32g5x3_timer.o(.text.timer_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[be]"></a>trigsel_init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, gd32g5x3_trigsel.o(.text.trigsel_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = trigsel_init &rArr; trigsel_register_lock_get
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trigsel_register_lock_get
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_trigger_config
</UL>

<P><STRONG><a name="[134]"></a>trigsel_register_lock_get</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, gd32g5x3_trigsel.o(.text.trigsel_register_lock_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = trigsel_register_lock_get
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trigsel_init
</UL>

<P><STRONG><a name="[f0]"></a>usart_baudrate_set</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, gd32g5x3_usart.o(.text.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get &rArr; rcu_pll_clock_freq_cal
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
</UL>

<P><STRONG><a name="[126]"></a>usart_data_transmit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32g5x3_usart.o(.text.usart_data_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[ef]"></a>usart_deinit</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, gd32g5x3_usart.o(.text.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usart_deinit &rArr; rcu_periph_reset_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
</UL>

<P><STRONG><a name="[ec]"></a>usart_dma_receive_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32g5x3_usart.o(.text.usart_dma_receive_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_dma_receive_config
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>

<P><STRONG><a name="[ea]"></a>usart_dma_transmit_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32g5x3_usart.o(.text.usart_dma_transmit_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_dma_transmit_config
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_dma_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_dma_init
</UL>

<P><STRONG><a name="[f3]"></a>usart_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32g5x3_usart.o(.text.usart_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usart_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
</UL>

<P><STRONG><a name="[b5]"></a>usart_flag_clear</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gd32g5x3_usart.o(.text.usart_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>usart_flag_get</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, gd32g5x3_usart.o(.text.usart_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usart_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[b3]"></a>usart_interrupt_disable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gd32g5x3_usart.o(.text.usart_interrupt_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[a1]"></a>usart_interrupt_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gd32g5x3_usart.o(.text.usart_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel3_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_Channel0_IRQHandler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
</UL>

<P><STRONG><a name="[ae]"></a>usart_interrupt_flag_clear</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, gd32g5x3_usart.o(.text.usart_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, gd32g5x3_usart.o(.text.usart_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usart_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[f1]"></a>usart_receive_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32g5x3_usart.o(.text.usart_receive_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_receive_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
</UL>

<P><STRONG><a name="[f2]"></a>usart_transmit_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32g5x3_usart.o(.text.usart_transmit_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_transmit_config
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs485_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rs232_init
</UL>

<P><STRONG><a name="[135]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[14a]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[14b]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[14c]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[128]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printf
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_24c64_test
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_system_info
</UL>

<P><STRONG><a name="[14d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[14e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[14f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a5]"></a>SysTick_Config</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, systick.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>

<P><STRONG><a name="[a6]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, systick.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>

<P><STRONG><a name="[a8]"></a>_soft_delay_</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, system_gd32g5x3.o(.text._soft_delay_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _soft_delay_
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[a9]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32g5x3.o(.text.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = system_clock_config &rArr; system_clock_216m_hxtal
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_216m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[133]"></a>system_clock_216m_hxtal</STRONG> (Thumb, 324 bytes, Stack size 20 bytes, system_gd32g5x3.o(.text.system_clock_216m_hxtal))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = system_clock_216m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[132]"></a>rcu_pll_clock_freq_cal</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, gd32g5x3_rcu.o(.text.rcu_pll_clock_freq_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rcu_pll_clock_freq_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>

<P><STRONG><a name="[103]"></a>pwm_gpio_config</STRONG> (Thumb, 258 bytes, Stack size 48 bytes, bsp_tim_pwm.o(.text.pwm_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = pwm_gpio_config &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_tim_pwm_init
</UL>

<P><STRONG><a name="[137]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[136]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[13a]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[139]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
